# print('Calculate ROC - np')
np <- colSums(filter) - colSums(test.genes.labels)  # Postives
# print('Calculate ROC - nn')
nn <- dim(test.genes.labels)[1] - colSums(filter)  # Negatives
# print('Calculate ROC - p')
p <- apply(predicts, 2, sum, na.rm = TRUE)
# print('Calculate ROC - rocN')
rocN <- (p/np - (np + 1)/2)/nn
rocN <- matrix(rocN, ncol = nFold, nrow = l)
rocN <- rowMeans(rocN)
# print('Calculate node degree')
node_degree <- rowSums(network)
colsums <- colSums(genes.labels)
# print('Calculate node degree - sum across gene labels')
node_degree <- matrix(node_degree)
temp <- t(node_degree) %*% genes.labels
# print('Calculate node degree - average')
average_node_degree <- t(temp)/colsums
# print('Calculate node degree roc - rank node degree')
ranks <- apply(abs(node_degree), 2, rank, na.last = "keep", ties.method = "average")
ranks <- matrix(ranks, nrow = length(ranks), ncol = dim(genes.labels)[2])
# print('Calculate node degree roc - remove negatives')
negatives <- which(genes.labels == 0, arr.ind = TRUE)
ranks[negatives] <- 0
# print('Calculate node degree roc - np')
np <- colSums(genes.labels)
# print('Calculate node degree roc - nn')
nn <- dim(genes.labels)[1] - np
# print('Calculate node degree roc - p')
p <- apply(ranks, 2, sum, na.rm = TRUE)
# print('Calculate node degree roc - roc')
roc <- (p/np - (np + 1)/2)/nn
if (FLAG_DRAW == TRUE) {
plot_roc_overlay(predicts, test.genes.labels)
}
scores <- cbind(
auc=rocN,
avg_node_degree=matrix(average_node_degree)[, 1],
degree_null_auc=roc)
} else if (output == "PR") {
nans <- which(test.genes.labels == 1, arr.ind = TRUE)
predicts[nans] <- NA
filter <- matrix(genes.labels, nrow = g, ncol = nFold * l)
negatives <- which(filter == 0, arr.ind = TRUE)
positives <- which(filter == 1, arr.ind = TRUE)
# print('Rank test data')
predicts <- apply(-abs(predicts), 2, rank, na.last = "keep", ties.method = "average")
predicts[negatives] <- 0
avgprc.s <- lapply(1:(nFold * l), function(i)
mean(  ( 1:length(which( sort(predicts[,i]) > 0   )  )
/ sort(predicts[,i])[ which( sort(predicts[,i]) > 0 )]), na.rm = TRUE)   )
n.s <- colSums(test.genes.labels)
avgprc.null <- lapply(1:(nFold * l), function(i) n.s[i]/g)
avgprc.null <- rowMeans(matrix(unlist(avgprc.null), ncol = nFold, nrow = l, byrow = FALSE),
na.rm = TRUE)
avgprc <- rowMeans(matrix(unlist(avgprc.s), ncol = nFold, nrow = l, byrow = FALSE), na.rm = TRUE)
names(avgprc) <- colnames(genes.labels)
# print('Calculate node degree')
node_degree <- rowSums(network)
colsums <- colSums(genes.labels)
# print('Calculate node degree - sum across gene labels')
node_degree <- matrix(node_degree)
temp <- t(node_degree) %*% genes.labels
# print('Calculate node degree - average')
average_node_degree <- t(temp)/colsums
scores <- cbind(
avgprc=avgprc,
avg_node_degree=matrix(average_node_degree)[, 1],
degree_null_auc=avgprc.null)
}
return(scores)
}
predictions <- function(genes.labels, network) {
genes.labels <- as.matrix(genes.labels)
# Filter for common genes between network and labels
ord <- order(rownames(network))
network <- network[ord, ord]
ord <- order(rownames(genes.labels))
genes.labels <- as.matrix(genes.labels[ord, ])
match.lab <- match(rownames(genes.labels), rownames(network))
filt.lab <- !is.na(match.lab)
filt.net <- match.lab[filt.lab]
network <- network[filt.net, filt.net]
genes.labels <- as.matrix(genes.labels[filt.lab, ])
# genes.label : needs to be in 1s and 0s
l <- dim(genes.labels)[2]
g <- dim(genes.labels)[1]
ab <- which(genes.labels != 0, arr.ind = TRUE)
n <- length(ab[, 1])
# Get sums - mat. mul.
sumin <- (t(network) %*% genes.labels)
# Sum of all edge in network
sumall <- matrix(apply(network, 2, sum), ncol = dim(sumin)[2], nrow = dim(sumin)[1])
# Predictions
predicts <- sumin/sumall
return(predicts)
}
GO_groups_voted <-run_GBA(mat.adj, go.table.auroc, min=20, max=100)
auroc_network<-GO_groups_voted[[3]]
auroc_degree<-mean(GO_groups_voted[[1]][,3])
auroc_degree<-mean(GO_groups_voted[[1]][,3])
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
View(go.table.auroc)
source('~/internship-Angers/catma5/GO_enrichment.R')
plot(g, edge.arrow.size=.2,vertex.size=2,layout=l,vertex.label=NA,edge.width=0.2)
plot(g, edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
plot(g.go, edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
View(agrigo)
source('~/internship-Angers/catma5/GO_enrichment.R')
View(GO_groups_voted)
View(GO_groups_voted)
print(GO_groups_voted[[1]][,3])
#agrigo<-read.table(paste("/home/bothorel/internship-Angers/catma5/data/GOagri_term_Arabidopsis_thaliana", sep=""), header=F)
agrigo<-read.table(paste("/home/bothorel/internship-Angers/GOSlim/ATH_GO_normalized.csv", sep=""), header=F)
#agrigo<-read.table(paste("/home/bothorel/internship-Angers/catma5/data/GOagri_term_Arabidopsis_thaliana", sep=""), header=F)
agrigo<-read.table(paste("/home/bothorel/internship-Angers/GOSlim/ATH_GO_normalized.csv", sep="\t"), header=F)
View(agrigo)
#agrigo<-read.table(paste("/home/bothorel/internship-Angers/catma5/data/GOagri_term_Arabidopsis_thaliana", sep=""), header=F)
agrigo<-read.csv("/home/bothorel/internship-Angers/GOSlim/ATH_GO_normalized.csv", sep="\t")
View(agrigo)
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
View(GO_groups_voted)
View(GO_groups_voted)
GO_groups_voted[[1]]
source('~/internship-Angers/catma5/GO_enrichment.R')
View(g.go)
View(agrigo)
agrigo<-read.table("/home/bothorel/internship-Angers/catma5/data/GOagri_term_Arabidopsis_thaliana", sep="", header=F)
source('~/internship-Angers/catma5/GO_enrichment.R')
print(V(g)$name)
print(GO.eff)
agrigo<-read.table("/home/bothorel/internship-Angers/catma5/data/GOagri_term_Arabidopsis_thaliana", sep="", header=F)
agrigo<-subset(agrigo, agrigo[,2] %in% V(g)$name)
GO.eff<-table(agrigo[,3])
print(GO.eff)
GO.eff<-names(which(GO.eff>50 & GO.eff<501))
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
View(agrigo)
df <- as.matrix(read.csv(file="/home/bothorel/internship-Angers/catma5/biological_results/ISample/all/list_link_all_5000_0.05.csv"))
g <- simplify(graph_from_data_frame(df,directed=F))
vertex.number<-length(V(g)$name)
edge.number<-length(E(g))
mean.degree<-mean(degree(g))
agrigo<-read.table("/home/bothorel/internship-Angers/catma5/data/GOagri_term_Arabidopsis_thaliana", sep="", header=F)
agrigo<-subset(agrigo, agrigo[,2] %in% V(g)$name)
GO.eff<-table(agrigo[,3])
GO.eff<-names(which(GO.eff>2 & GO.eff<501))
agrigo<-droplevels(subset(agrigo, agrigo[,3] %in% GO.eff))
View(agrigo)
View(agrigo)
goterms<-names(table(agrigo[,3]))
go.list<-vector(mode="list", length(goterms))
View(go.list)
View(go.list)
names(go.list)<-goterms
View(go.list)
for (i in goterms){
tmp<-subset(agrigo, agrigo[,3]==i)
go.list[[i]]<-t(combn(as.vector(tmp[,2]),2))
}
View(go.list)
go.table<-do.call("rbind", go.list)
go.tag<-unlist(lapply(go.list, nrow))
View(go.table)
go.tag<-unlist(lapply(go.list, nrow))
genome.effectif<-go.tag
go.tag<-unlist(sapply(1:length(go.tag), function(x)rep(names(go.tag)[x],go.tag[x])))
View(go.tag)
go.table<-cbind.data.frame(go.table,go.tag)
View(go.table)
go.table<-rbind(cbind(paste(go.table[,1], go.table[,2], sep="_"), as.vector(go.table[,3])), cbind(paste(go.table[,2], go.table[,1], sep="_"),  as.vector(go.table[,3])))
View(go.table)
#GO enrichment
universe=choose(length(table(agrigo[,2])),2)
#GO enrichment
universe=choose(length(table(agrigo[,2])),2)
g.edgelist<-as_edgelist(g)
#GO enrichment
universe=choose(length(table(agrigo[,2])),2)
#GO enrichment
universe<-choose(length(table(agrigo[,2])),2)
View(agrigo)
View(agrigo)
df <- as.matrix(read.csv(file="/home/bothorel/internship-Angers/catma5/biological_results/ISample/all/list_link_all_5000_0.05.csv"))
g <- simplify(graph_from_data_frame(df,directed=F))
vertex.number<-length(V(g)$name)
edge.number<-length(E(g))
mean.degree<-mean(degree(g))
agrigo<-read.table("/home/bothorel/internship-Angers/catma5/data/GOagri_term_Arabidopsis_thaliana", sep="", header=F)
agrigo<-subset(agrigo, agrigo[,2] %in% V(g)$name)
GO.eff<-table(agrigo[,3])
GO.eff<-names(which(GO.eff>2 & GO.eff<501))
agrigo<-droplevels(subset(agrigo, agrigo[,3] %in% GO.eff))
View(agrigo)
goterms<-names(table(agrigo[,3]))
go.list<-vector(mode="list", length(goterms))
names(go.list)<-goterms
for (i in goterms){
tmp<-subset(agrigo, agrigo[,3]==i)
go.list[[i]]<-t(combn(as.vector(tmp[,2]),2))
}
View(go.list)
go.table<-do.call("rbind", go.list)
View(go.table)
go.tag<-unlist(lapply(go.list, nrow))
genome.effectif<-go.tag
go.tag<-unlist(sapply(1:length(go.tag), function(x)rep(names(go.tag)[x],go.tag[x])))
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
View(df)
V(g)
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
df <- as.matrix(read.csv(file="/home/bothorel/internship-Angers/catma5/biological_results/Ratio/all/list_link_all_5000_0.05.csv"))
g <- simplify(graph_from_data_frame(df,directed=F))
vertex.number<-length(V(g)$name)
edge.number<-length(E(g))
mean.degree<-mean(degree(g))
agrigo<-read.table("/home/bothorel/internship-Angers/catma5/data/GOagri_term_Arabidopsis_thaliana", sep="", header=F)
agrigo<-subset(agrigo, agrigo[,2] %in% V(g)$name)
GO.eff<-table(agrigo[,3])
GO.eff<-names(which(GO.eff>2 & GO.eff<501))
agrigo<-droplevels(subset(agrigo, agrigo[,3] %in% GO.eff))
goterms<-names(table(agrigo[,3]))
go.list<-vector(mode="list", length(goterms))
names(go.list)<-goterms
for (i in goterms){
tmp<-subset(agrigo, agrigo[,3]==i)
go.list[[i]]<-t(combn(as.vector(tmp[,2]),2))
}
go.table<-do.call("rbind", go.list)
View(go.table)
View(go.list)
View(table.hyper)
View(go.table)
View(go.list)
View(table.hyper)
View(go.table)
View(go.table.local)
View(go.table.local)
View(table.hyper)
View(go.table.local)
agrigo<-read.csv("/home/bothorel/internship-Angers/GOSlim/ATH_GO_normalized.csv", sep="\t")
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
View(go.table.local)
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
df <- as.matrix(read.csv(file="/home/bothorel/internship-Angers/catma5/biological_results/Ratio/all/list_link_all_1000_0.05.csv"))
library('igraph')
g <- graph_from_data_frame(df,directed = TRUE)
g2 <- graph_from_data_frame(df,directed = FALSE)
net.bg <- sample_pa(1000)
l <- layout_with_fr(net.bg)
plot(g, edge.arrow.size=.4,vertex.size=2,layout=l,vertex.label=NA)
plot(g2, edge.arrow.size=.2,vertex.size=2,layout=l,vertex.label=NA,edge.width=0.2)
g_greed <- cluster_fast_greedy(g2)
g_clust <- cluster_louvain(g2)
par(mfrow=c(2,1))
plot(g_greed, g2, col = membership(g_greed),mark.groups = communities(g_greed),edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
plot(g_clust, g2, col = membership(g_greed),mark.groups = communities(g_greed),edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
modularity(g_clust)
modularity(g_greed)
for(i in 1:412){
print(g_clust[i])
}
for(i in 1:412){
if(length(g_clust[i])>10){
print(g_clust[i])
}
}
for(i in 1:412){
print(typeof(g_clust[i]))
}
print(length(g_clust[i]))
for(i in 1:412){
print(length(g_clust[i]))
}
print(g_clust[i])
for(i in 1:412){
print(g_clust[i])
}
for(i in 1:413){
print(g_clust[i])
}
phylo <- as.phylo(g_greed)
phylo <- as_phylo(g_greed)
install.packages("ape", lib="/home/bothorel/anaconda3/lib/R/library")
phylo <- as_phylo(g_greed)
View(phylo)
plot(phylo, g2, col = membership(g_greed),mark.groups = communities(g_greed),edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
plot(phylo, g2,edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
plot(phylo,edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
plot(phylo)
plot_dendogram(phylo,mode='phylo')
plot_dendrogram(phylo,mode='phylo')
plot_dendrogram(g2,mode='phylo')
plot_dendrogram(g_greed,mode='phylo')
plot_dendrogram(g_greed[0],mode='phylo')
ss01 <- cut(as.dendrogram(g_greed), h=length(membership(g_greed))-length(g_greed))$lower
layout(matrix(1:412, nrow=2))
layout(matrix(1:200, nrow=2))
dendPlot(g_greed, mode="hclust")
lapply(ss01, plot, cex=1)
layout(matrix(1:100, nrow=2))
dendPlot(g_greed, mode="hclust")
lapply(ss01, plot, cex=1)
plot_dendrogram(ss01,mode='phylo')
ss01 <- cut(as.dendrogram(g_greed), h=length(membership(g_greed))-length(g_greed))$lower
ss01 <- cut(as.dendrogram(g_greed), h=5)
View(ss01)
ss01 <- cut(as.dendrogram(g_greed), h=2)
for(i in 1:412){
print(g_clust[i])
}
print(length(g_clust[i][1]))
for(i in 1:412){
print(length(g_clust[i][1]))
}
for(i in 1:412){
print(length(g_clust[i][0]))
}
for(i in 1:412){
print(length(g_clust))
}
for(i in 1:412){
print(length(g_clust[i]))
}
memberships(g_greed)
membership(g_greed)
membership(g_greed[0])
membership(g_greed$AT4G05490)
for(i in 1:412){
print(sizes(g_clust[i]))
}
print(length(g_clust[i]))
print(length(g_clust))
print((g_clust[i]))
print((g_clust$`1`))
print((g_clust$1))
print(g_clust$1)
print(g_clust$"1")
print(g_clust[i])
print(g_clust[i])
print(i)
print(g_clust[i])
print(g_clust[1][i])
print(g_clust[i]$1)
print(g_clust[i]$'1')
print(length(g_clust[i]$'1'))
for(i in 1:412){
print(length(g_clust[i]$'1'))
}
print(length(g_clust[i]$'2'))
for(i in 1:412){
print(length(g_clust[i]$'2'))
}
print(length(g_clust[i]$'1'))
for(i in 1:412){
print(length(g_clust[i]$'1'))
}
for(i in 1:412){
print(length(g_clust[i]$'0'))
}
print(length(g_clust[i]$'1'))
for(i in 1:412){
print(length(g_clust[i]$'1'))
}
print(length(g_clust[i]))
for(i in 1:412){
print(length(g_clust[i]$'1'))
}
for(i in 1:412){
if(length(g_clust[i]$'1')>1){
print(length(g_clust[i]$'1'))
}
}
for(i in 1:412){
if(length(g_clust[i]$'1')>1){
print(length(g_clust[i]))
}
}
print(g_clust[i])
for(i in 1:412){
if(length(g_clust[i]$'1')>1){
print(g_clust[i])
}
}
clusters <- c()
for(i in 1:412){
if(length(g_clust[i]$'1')>1){
clusters <- c(clusters,g_clust[i])
}
}
for(i in 1:412){
print(g_clust[i])
}
clusters <- c()
for(i in 1:length(g_clust)){
if(length(g_clust[i]$'1')>1){
clusters <- c(clusters,g_clust[i])
}
}
clusters <- c()
for(i in 1:length(g_clust)){
if(length(g_clust[i]$'1')>2){
clusters <- c(clusters,g_clust[i])
}
}
clusters.greed <- c()
for(i in 1:length(g_greed)){
if(length(g_greed[i]$'1')>2){
clusters <- c(clusters,g_greed[i])
}
}
clusters_greed <- c()
clusters.greed <- c()
for(i in 1:length(g_greed)){
if(length(g_greed[i]$'1')>2){
clusters.greed <- c(clusters.greed,g_greed[i])
}
}
for(i in clusters.greed){
print(i)
}
for(i in g_greed){
print(i)
}
for(i in clusters.greed){
print(length(i))
}
for(i in clusters.greed){
print(clusters.greed[i])
}
for(i in clusters.greed){
print(i)
}
for(i in clusters.greed){
print("coucou")
print(i)
}
print(i)
for(i in clusters.greed){
print(i)
}
matrix <- as.matrix(clusters.greed)
write(matrix,file="data.csv")
write.csv(matrix,file="data.csv")
getpwd()
pwd()
getwd()
par(mfrow=c(2,1))
plot(g_greed, g2, col = membership(g_greed),mark.groups = communities(g_greed),edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
plot(g_clust, g2, col = membership(g_greed),mark.groups = communities(g_greed),edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
par(mfrow=c(2,1))
plot(g_greed, g2, col = membership(g_greed),mark.groups = communities(g_greed),edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
plot(g_clust, g2, col = membership(g_greed),mark.groups = communities(g_greed),edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
