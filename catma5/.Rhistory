install.packages('rjson')
exit()
quit()
df <- as.matrix(read.csv(file="/home/bothorel/internship-Angers/catma5/biological_results/Ratio/biotic/list_link_biotic_5000_0.05.csv"))
library('igraph')
g <- graph_from_data_frame(df,directed = TRUE)
g2 <- graph_from_data_frame(df,directed = FALSE)
net.bg <- sample_pa(1000)
l <- layout_with_fr(net.bg)
plot(g, edge.arrow.size=.4,vertex.size=2,layout=l,vertex.label=NA)
plot(g2, edge.arrow.size=.2,vertex.size=2,layout=l,vertex.label=NA,edge.width=0.2)
g_clust <- cluster_louvain(g2)
g_greed <- cluster_fast_greedy(g2)
g_eigen <- cluster_leading_eigen(g2)
plot(g_greed,g2,edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
plot(g_greed, g2, col = membership(g_greed),mark.groups = communities(g_greed),edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
plot(g_clust, g2, col = membership(g_greed),mark.groups = communities(g_greed),edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
plot(g_eigen, g2, col = membership(g_greed),mark.groups = communities(g_greed),edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
modularity(g_clust)
modularity(g_greed)
clusters <- c()
for(i in 1:length(g_clust)){
if(length(g_clust[i]$'1')>2){
clusters <- c(clusters,g_clust[i])
}
}
clusters.greed <- c()
for(i in 1:length(g_greed)){
if(length(g_greed[i]$'1')>2){
clusters.greed <- c(clusters.greed,g_greed[i])
}
}
plot(g_greed, g2, col = membership(g_greed),mark.groups = communities(g_greed),edge.arrow.size=.2,vertex.size=2,vertex.label=NA,edge.width=0.2)
membership(g_greed)
getwd()
write.csv(membership(g_greed),file="data.csv")
write.csv(as.matrix(membership(g_greed)),file="data.csv")
write.csv(as.matrix(membership(g_greed)),file="data.csv",header=NULL)
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
View(go.list.table)
View(go.table.local)
View(table.hyper)
View(go.list.table)
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
View(go.list.table)
source('~/internship-Angers/catma5/GO_enrichment.R')
View(go.list.table)
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
View(go.list.table)
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
View(go.list.table)
source('~/internship-Angers/catma5/GO_enrichment.R')
View(go.list.table)
View(go.list.table)
View(go.table)
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
View(go.table)
View(go.list.table)
View(go.table.local)
View(agrigo)
source('~/internship-Angers/catma5/GO_enrichment.R')
View(agrigo)
source('~/internship-Angers/catma5/GO_enrichment.R')
df <- as.matrix(read.csv(file="/home/bothorel/internship-Angers/catma5/biological_results/Ratio/biotic/list_link_biotic_5000_0.05.csv"))
g <- simplify(graph_from_data_frame(df,directed=F))
vertex.number<-length(V(g)$name)
edge.number<-length(E(g))
mean.degree<-mean(degree(g))
#agrigo<-read.table("/home/bothorel/internship-Angers/catma5/data/GOagri_term_Arabidopsis_thaliana", sep="", header=F)
#agrigo<-read.csv("/home/bothorel/internship-Angers/GOSlim/ATH_GO_normalized.csv", sep="\t",header=F)
agrigo<-read.csv("/home/bothorel/internship-Angers/GOSlim/ATH_GO_Full_normalized.csv", sep="\t",header=F)
agrigo<-subset(agrigo, agrigo[,2] %in% V(g)$name)
GO.eff<-table(agrigo[,3])
GO.eff<-names(which(GO.eff>2 & GO.eff<501))
agrigo<-droplevels(subset(agrigo, agrigo[,3] %in% GO.eff))
goterms<-names(table(agrigo[,3]))
go.list<-vector(mode="list", length(goterms))
names(go.list)<-goterms
View(go.list)
View(go.list)
for (i in goterms){
tmp<-subset(agrigo, agrigo[,3]==i)
go.list[[i]]<-t(combn(as.vector(tmp[,2]),2))
}
go.table<-do.call("rbind", go.list)
View(go.table)
View(go.tag)
go.tag<-unlist(sapply(1:length(go.tag), function(x)rep(names(go.tag)[x],go.tag[x])))
go.table<-do.call("rbind", go.list)
go.tag<-unlist(lapply(go.list, nrow))
genome.effectif<-go.tag
go.tag<-unlist(sapply(1:length(go.tag), function(x)rep(names(go.tag)[x],go.tag[x])))
go.table<-cbind.data.frame(go.table,go.tag)
go.table<-rbind(cbind(paste(go.table[,1], go.table[,2], sep="_"), as.vector(go.table[,3])), cbind(paste(go.table[,2], go.table[,1], sep="_"),  as.vector(go.table[,3])))
View(go.table)
#GO enrichment
universe=choose(length(table(agrigo[,2])),2)
#GO enrichment
universe=choose(length(table(agrigo[,2])),2)
View(agrigo)
print(choose(8464,2))
print(length(table(agrigo[,2])))
print(choose(2713,2))
print(choose(5,2))
print(2713**2)
print(2713**2/2)
print(2713**2/2-2713)
print(2713!)
print(fact(2713))
#GO enrichment
universe=choose(length(table(agrigo[,2])),2)
g.edgelist<-as_edgelist(g)
g.edgelist<-paste(g.edgelist[,1], g.edgelist[,2], sep="_")
go.table.local<-subset(go.table, go.table[,1] %in% g.edgelist)
table.hyper<-cbind(table(go.table.local[,2]), table(go.table[,2])[names(table(go.table.local[,2]))]/2)
View(table.hyper)
print([names(table(go.table.local[,2]))])
print(table(go.table[,2])[names(table(go.table.local[,2]))])
print(table(go.table[,2])[names(table(go.table.local[,2]))]/2)
View(go.table.local)
View(go.table.local)
print(table(go.table[,2]))
View(go.table)
print(names(table(go.table.local[,2])))
k<-length(E(g))
pval<-apply(table.hyper, 1, function(x){
q<-as.numeric(x[1])
m<-as.numeric(x[2])
n<- universe - m
phyper(q, m, n, k, lower.tail=F)
})
pvaladjust<-p.adjust(pval, method="BH")
go.list.table<-cbind(table.hyper, pvaladjust)
View(go.list.table)
View(pvaladjust)
View(pval)
typeof(pval)
list(pval)
pval.list <- list(pval)
pval.list.ordered <- pval.list[order(unlist(pval.list), decreasing=FALSE)]
View(pval.list.ordered)
View(pval.list)
pval.list <- data.frame(pval)
View(pval.list)
pval.list.ordered <- pval.list[order(unlist(pval.list), decreasing=FALSE)]
pval.list.ordered <- pval.list[order(pval), decreasing=FALSE)]
pval.list.ordered <- pval.list[order(pval)]
pval.list.ordered <- pval.list[order(,pval)]
pval.list.ordered <- pval.list[order(,pval),decreasing=FALSE]
pval.list.ordered <- pval.list[order(,pval,decreasing=FALSE)]
pval.list.ordered <- pval.list[order(pval),]
View(pval.list.ordered)
pval.list.ordered.bind <- cbind(pval.list,pval.list.ordered)
View(pval.list.ordered.bind)
pval.list.ordered.bind <- cbind(pval.list.ordered,pval.list)
pval.list.ordered <- pval.list[order(pval),drop=FALSE]
pval.list.ordered <- pval.list[order(pval.list$pval),drop=FALSE]
pval.list.ordered <- pval.list[order(pval.list$pval),,drop=FALSE]
pvaladjust<-p.adjust(pval.list.ordered, method="BH")
pvaladjust<-p.adjust(as.numeric(unlist(pval.list.ordered)), method="BH")
go.list.table<-cbind(table.hyper, pvaladjust)
go.list.table<-go.list.table[go.list.table[,3]<0.05,,drop=F]
number.enriched.go.global<-nrow(go.list.table)
View(go.list.table)
go.list.table<-go.list.table[go.list.table[,3]<0.5,,drop=F]
number.enriched.go.global<-nrow(go.list.table)
pval.list <- data.frame(pval)
pval.list.ordered <- pval.list[order(pval.list$pval),,drop=FALSE]
pvaladjust<-p.adjust(as.numeric(unlist(pval.list.ordered)), method="BH")
go.list.table<-cbind(table.hyper, pvaladjust)
go.list.table<-go.list.table[go.list.table[,3]<0.5,,drop=F]
number.enriched.go.global<-nrow(go.list.table)
View(go.list.table)
View(go.list)
View(go.list)
View(pval.list.ordered)
View(pvaladjust)
View(agrigo)
#AUROC
g.go<-simplify(graph_from_data_frame(agrigo[,2:3], directed=F))
go.table.auroc<-as_adjacency_matrix(g.go)
View(go.table.auroc)
go.table.auroc<-as.matrix(go.table.auroc[grep("GO:", colnames(go.table.auroc), invert=T),grep("GO:", colnames(go.table.auroc))])
View(go.table.auroc)
dim(go.table.auroc)
View(agrigo)
cs.go<-colSums(go.table.auroc)
View(cs.go)
#AUROC
g.go<-simplify(graph_from_data_frame(agrigo[,2:3], directed=F))
go.table.auroc<-as_adjacency_matrix(g.go)
go.table.auroc<-as.matrix(go.table.auroc[grep("GO:", colnames(go.table.auroc), invert=T),grep("GO:", colnames(go.table.auroc))])
cs.go<-colSums(go.table.auroc)
go.table.auroc<-go.table.auroc[,cs.go]
View(go.table)
View(go.table.auroc)
go.table.auroc<-as(go.table.auroc, "sparseMatrix")
dim(go.table.auroc)
#AUROC
g.go<-simplify(graph_from_data_frame(agrigo[,2:3], directed=F))
go.table.auroc<-as_adjacency_matrix(g.go)
go.table.auroc<-as.matrix(go.table.auroc[grep("GO:", colnames(go.table.auroc), invert=T),grep("GO:", colnames(go.table.auroc))])
cs.go<-colSums(go.table.auroc)
go.table.auroc<-go.table.auroc[,cs.go>2 & cs.go<301]
go.table.auroc<-as(go.table.auroc, "sparseMatrix")
dim(go.table.auroc)
mat.adj<-as_adjacency_matrix(g)
mat.adj<-mat.adj[rownames(go.table.auroc), rownames(go.table.auroc)]
View(mat.adj)
mat.adj<-as(mat.adj, "sparseMatrix")
View(mat.adj)
GO_groups_voted <-run_GBA(mat.adj, go.table.auroc, min=20, max=1000)
auroc_network<-GO_groups_voted[[3]]
auroc_degree<-mean(GO_groups_voted[[1]][,3])
View(GO_groups_voted)
print(GO_groups_voted[[2]])
print(GO_groups_voted[[1]][,3])
print(GO_groups_voted[[1]][,2])
print(mean(GO_groups_voted[[1]][,2]))
print(mean(GO_groups_voted[[1]][,1]))
df <-as.data.frame(GO_groups_voted[[2]])
df <-as.matrix(GO_groups_voted[[2]])
getwd()
write.csv(df,"testeeeeeeeee.csv")
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
df <- as.matrix(read.csv(file="/home/bothorel/internship-Angers/catma5/biological_results/Ratio/biotic/list_link_biotic_5000_0.05.csv"))
g <- simplify(graph_from_data_frame(df,directed=F))
vertex.number<-length(V(g)$name)
edge.number<-length(E(g))
mean.degree<-mean(degree(g))
#agrigo<-read.table("/home/bothorel/internship-Angers/catma5/data/GOagri_term_Arabidopsis_thaliana", sep="", header=F)
#agrigo<-read.csv("/home/bothorel/internship-Angers/GOSlim/ATH_GO_normalized.csv", sep="\t",header=F)
agrigo<-read.csv("/home/bothorel/internship-Angers/GOSlim/ATH_GO_Full_normalized.csv", sep="\t",header=F)
agrigo<-subset(agrigo, agrigo[,2] %in% V(g)$name)
View(agrigo)
#agrigo<-read.table("/home/bothorel/internship-Angers/catma5/data/GOagri_term_Arabidopsis_thaliana", sep="", header=F)
#agrigo<-read.csv("/home/bothorel/internship-Angers/GOSlim/ATH_GO_normalized.csv", sep="\t",header=F)
agrigo<-read.csv("/home/bothorel/internship-Angers/GOSlim/ATH_GO_Full_normalized.csv", sep=",",header=F)
agrigo<-subset(agrigo, agrigo[,2] %in% V(g)$name)
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
write.csv(as.matrix(sumall),"sumall.csv",col.names = names(genes.labels),row.names = row.names(network))
write.csv(as.matrix(sumall),"sumall.csv",col.names = col.names(genes.labels),row.names = row.names(network))
write.csv(as.matrix(sumall),"sumall.csv",col.names = colnames(genes.labels),row.names = rownames(network))
write.csv(as.matrix(sumall),"sumall.csv",col.names = rownames(genes.labels),row.names = rownames(network))
write.csv(as.matrix(sumall),"sumall.csv",col.names = F,row.names = F)
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
source('~/internship-Angers/catma5/GO_enrichment.R')
View(neighbor_voting)
View(go.table.local)
